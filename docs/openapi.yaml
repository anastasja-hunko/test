openapi: 3.0.1
info:
  title: "Test task"
  description: First web application on golang
  version: "0.1.0"
servers:
  - url: https://localhost:8181
    description: DEV environment
tags:
  - name: user
    description: operations with an user like /register and /authorization
  - name: doc
    description: operations with a document
  - name: rates
    description: rates from nbrb
paths:
  /:
    get:
      description: look for has the user been authorized and show main page
      responses:
        200:
          description: Good
        4XX:
          description: Bad
  /register:
    get:
      tags:
        - user
      summary: show register form for new user
      responses:
        200:
          description: Good
        4XX:
          description: Bad
    post:
      tags:
        - user
      summary: register a new user
      responses:
        200:
          description: Good
        4XX:
          description: Bad
#  /auhorization:
#  /createDoc/:
#  /editDoc/:
#  /deleteDoc/:
#  /logout:
#  get:
#    description: look for has the user been authorized and show main page
#    responses:
#      200:
#        description: Good
#      4XX:
#        description: Bad
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
    auth:
      type: apiKey
      name: Authorization
      in: header
  responses:
    UnauthorizedError:
      description: Access or Authentication information is missing or invalid.
    MethodNotAllowed:
      description: Method Not Allowed
    BadRequest:
      description: Bad Request
  schemas:
    AsistDataSet:
      type: object
      properties:
        approvalMode:
          type: string
        managerCnum:
          type: string
        demographics:
          $ref: '#/components/schemas/Demographics'
    AsistBatchDataSet:
      type: object
      properties:
        approvalMode:
          type: string
        records:
          type: array
          items:
            type: object
            properties:
              email:
                type: string
              managerCnum:
                type: string
              demographics:
                $ref: '#/components/schemas/Demographics'
    AsistBatchResult:
      type: array
      items:
        type: object
        properties:
          email:
            type: string
          error:
            type: string
          approvers:
            type: array
            items:
              $ref: '#/components/schemas/Approver'
    Approver:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    Demographics:
      type: object
      properties:
        companyCode:
          type: string
        geography:
          type: string
        region:
          type: string
        organizationCode:
          type: string
        businessGroupCode:
          type: string
        businessUnitCode:
          type: string
        departmentNumber:
          type: string
        departmentName:
          type: string
        division:
          type: string
        country:
          type: string
        isoCountryCode:
          type: string
        ebuCode:
          type: string
        lobCode:
          type: string
        jobRoleID:
          type: string
        isCIC:
          type: string
        isCommission:
          type: string
        isSeller:
          type: string
        isTechnicalJobRole:
          type: string








